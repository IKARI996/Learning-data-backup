
       
<meta http-equiv="content-type" content="text/html;charset=gb18030">
<script src="expand.js"></script>
<title>本章小结</title>

      <p>
		<a name="top"><font size="6"></font></a>
		<img border="0" src="素材库/items/slider.jpg" width="967" height="23"></p>
		<p align="center"> <a href="0900.htm">
		<img border="0" src="素材库/items/Leave.gif" width="26" height="26"></a></p>
<p><font size="6" color="#0000FF">9.7 本章小结</font><font face="宋体" size="6" color="#0000FF">&nbsp;</font><font size="6"><br>
　</font></p>

<table border="0" width="990" height="225" cellspacing="0" cellpadding="0" id="table1">
  <tr> 
    <td colspan="2" bgcolor="#000080">
	<p align="left"><strong><font size="6" color="#FFFFFF"><a name=".1">9</a></font><a name=".1"><font size="6" color="#FFFFFF">.7</font></a><font color="#FFFFFF" size="6"><a name=".1">
	</a></font><a name=".1"><font size="6" color="#FFFFFF">小结</font></a><font size="6">&nbsp;<a href="#top"><img border="0" src="pic/items/Top.gif" width="26" height="26"></a></font></strong></td> 
  </tr> 
  <tr>
    <td width="27" height="73"></td>
    <td width="963" height="73">
			<div v:shape="_x0000_s1026" class="O">
				<span style="font-family: 宋体; mso-fareast-font-family: 宋体; mso-hansi-font-family: Arial"><font size="6">　　</font><font size="6" color="red">操作系统</font><font size="6">是计算机硬件资源的管理器，其管理功能主要包括</font><font size="6" color="blue">处理机管理</font><font size="6">、</font><font size="6" color="blue">存储管理</font><font size="6">和</font><font size="6" color="blue">设备管理</font><font size="6">等。</font></span>
				<div style="mso-line-spacing:&quot;90 20 0&quot;;mso-margin-left-alt:216;mso-char-wrap:
1;mso-kinsoku-overflow:1">
			</div>
				<div v:shape="_x0000_s1026" class="O">
			<div style="mso-line-spacing:&quot;90 20 0&quot;;mso-margin-left-alt:216;mso-char-wrap:
1;mso-kinsoku-overflow:1">
						<div v:shape="_x0000_s1026" class="O">
							<div style="mso-line-spacing:&quot;90 20 0&quot;;mso-margin-left-alt:216;mso-char-wrap:
1;mso-kinsoku-overflow:1">
								<span style="font-family: 宋体; mso-fareast-font-family: 宋体; mso-hansi-font-family: Arial"><font size="6">　　操作系统的管理功能只有在专门的硬件支持下才能充分保证系统工作的高效与安全。硬件系统在设计层面上为操作系统提供了支持，包括处理机状态控制、特权指令、寄存器访问权限控制、程序状态字和程序执行现场保护与切换、中断机制、存储管理硬件等。操作系统设计者则应根据硬件特性和用户的使用需要，采用各种有效的管理策略。</font></span></div>
							<div style="mso-line-spacing:&quot;90 20 0&quot;;mso-margin-left-alt:216;mso-char-wrap:
1;mso-kinsoku-overflow:1">
								<span style="font-family: 宋体; mso-fareast-font-family: 宋体; mso-hansi-font-family: Arial"><font size="6">　　处理机调度是操作系统的核心功能之一。按照调度的层次，处理机调度可以分成</font><font size="6" color="blue">作业调度</font><font size="6">、</font><font size="6" color="blue">交换调度</font><font size="6">和</font><font size="6" color="blue">进程调度</font><font size="6">。其中，进程调度的运行频率最高。作业调度的周期较长，往往发生在一个作业运行完毕并将退出系统，需要重新调入一个作业进入内存时。交换调度的运行频率介于作业调度和进程调度之间。</font></span></div>
				</div>
						<div v:shape="_x0000_s1026" class="O">
					<div style="mso-line-spacing:&quot;90 20 0&quot;;mso-margin-left-alt:216;mso-char-wrap:
1;mso-kinsoku-overflow:1">
								<span style="font-family: 宋体; mso-fareast-font-family: 宋体; mso-hansi-font-family: Arial"><font size="6">　　</font><font size="6" color="blue">存储管理</font><font size="6">是操作系统的另外一个核心功能。存储管理主要解决存储器的</font><font size="6" color="blue">分配与回收</font><font size="6">、存储器</font><font size="6" color="blue">地址变换</font><font size="6">、</font><font size="6" color="blue">存储器扩充</font><font size="6">、存储器</font><font size="6" color="blue">共享与保护</font><font size="6">等问题。</font></span>
								<div v:shape="_x0000_s1026" class="O">
									<div style="mso-line-spacing:&quot;80 20 0&quot;;mso-margin-left-alt:216;mso-char-wrap:
1;mso-kinsoku-overflow:1">
										<span style="font-family: 宋体; mso-fareast-font-family: 宋体; mso-hansi-font-family: Arial"><font size="6">　　为了支持多个程序并发执行，现代操作系统逐渐引入了分区式存储管理，以及交换技术和分页技术。在存储管理部件</font></span><span lang="EN-US" style="mso-fareast-font-family: 宋体; mso-hansi-font-family: Arial; mso-fareast-language: ZH-CN"><font size="6">MMU</font></span><span style="font-family: 宋体; mso-fareast-font-family: 宋体; mso-hansi-font-family: Arial"><font size="6">的支持下，</font><font size="6" color="blue">虚拟存储器</font><font size="6">技术可以彻底解决存储器的调度与管理问题。</font></span></div>
									<div style="mso-line-spacing:&quot;80 20 0&quot;;mso-margin-left-alt:216;mso-char-wrap:
1;mso-kinsoku-overflow:1">
										<span style="font-family: 宋体; mso-fareast-font-family: 宋体; mso-hansi-font-family: Arial"><font size="6">　　用户程序按照</font><font size="6" color="blue">虚地址（逻辑地址）</font><font size="6">编程并存放在辅存中。程序运行时，由地址变换机构依据当时分配给该程序的实地址空间把程序的一部分调入</font><font size="6" color="blue">实存（物理存储空间或主存空间）</font><font size="6">。由操作系统在硬件的支持下对程序进行虚地址到实地址的变换，这一过程称为程序的再定位。每次访存时，首先判断该虚地址所对应的部分是否在实存中：如果是，则进行地址转换并用实地址访问主存；否则，按照某种算法将辅存中的部分程序调度进内存，再按同样的方法访问主存。对应用程序而言，如果主存的命中率很高，虚存的访问时间就接近于主存访问时间，而虚存的大小仅仅依赖于辅存的大小。</font></span></div>
							<div style="mso-line-spacing:&quot;80 50 0&quot;;mso-margin-left-alt:216;mso-char-wrap:
1;mso-kinsoku-overflow:1">
										<span style="font-family: 宋体; mso-fareast-font-family: 宋体; mso-hansi-font-family: Arial"><font size="6">　　虚存机制也要解决一些关键问题，包括调度问题、地址映射问题和替换问题等。在操作系统的控制下，硬件和系统软件为用户解决了上述问题，从而使应用程序的编程大大简化。</font></span>
										<div v:shape="_x0000_s1026" class="O">
											<div style="mso-line-spacing:&quot;90 20 0&quot;;mso-margin-left-alt:216;mso-char-wrap:
1;mso-kinsoku-overflow:1">
												<span style="font-family: 宋体; mso-fareast-font-family: 宋体; mso-hansi-font-family: Arial"><font size="6">　　</font><font size="6" color="#0066ff">页式虚拟存储系统</font><font size="6">中，虚地址空间和主存空间都被分成大小相等的</font><font size="6" color="blue">页</font><font size="6">，通过页表可以把虚地址转换成物理地址。为了避免对主存访问次数的增多，可以对页表本身实行二级缓存，把页表中的最活跃部分存放在</font></span><font color="blue"><span style="font-family: 宋体; mso-fareast-font-family: 宋体; mso-hansi-font-family: Arial"><font size="6">转换后援缓冲器（</font></span><span lang="EN-US" style="mso-fareast-font-family: 宋体; mso-hansi-font-family: Arial; mso-fareast-language: ZH-CN"><font size="6">TLB</font></span><span style="font-family: 宋体; mso-fareast-font-family: 宋体; mso-hansi-font-family: Arial"><font size="6">）</font></span></font><span style="font-family: 宋体; mso-fareast-font-family: 宋体; mso-hansi-font-family: Arial"><font size="6">中。</font></span></div>
											<div style="mso-line-spacing:&quot;90 50 0&quot;;mso-margin-left-alt:216;mso-char-wrap:
1;mso-kinsoku-overflow:1">
												<span style="font-family: 宋体; mso-fareast-font-family: 宋体; mso-hansi-font-family: Arial"><font size="6">　　分页方式的缺点是页长与程序的逻辑大小不相关，而分段方式则可按照程序的自然分界将内存空间划分为长度可以动态改变的存储区域。在</font><font size="6" color="#0066ff">段式虚拟存储系统</font><font size="6">中，虚地址由段号和段内地址（偏移量）组成。虚地址到实主存地址的变换通过段表实现。</font></span>
												<div v:shape="_x0000_s1026" class="O">
													<div style="mso-line-spacing:&quot;80 20 0&quot;;mso-margin-left-alt:216;mso-char-wrap:
1;mso-kinsoku-overflow:1">
														<span style="font-family: 宋体; mso-fareast-font-family: 宋体; mso-hansi-font-family: Arial"><font size="6">　　</font><font size="6" color="#0066ff">段页式</font><font size="6" color="#0066ff">虚拟存储系统</font><font size="6">是段式虚拟存储器和页式虚拟存储器的结合，程序按页进行调入和调出操作，但可按段进行编程、保护和共享。</font></span></div>
													<div style="mso-line-spacing:&quot;80 20 0&quot;;mso-margin-left-alt:216;mso-char-wrap:
1;mso-kinsoku-overflow:1">
														<span style="font-family: 宋体; mso-fareast-font-family: 宋体; mso-hansi-font-family: Arial"><font size="6">　　虚拟存储器还解决存储保护等问题。在虚拟存储系统中，通常采用页表保护、段表保护和键式保护方法实现存储区域保护。还可以结合对主存信息的使用方式实现访问方式</font></span><font size="6"><span style="font-family: 宋体; mso-fareast-font-family: 宋体; mso-hansi-font-family: Arial">保护。</span></font></div>
											<div style="mso-line-spacing:&quot;80 50 0&quot;;mso-margin-left-alt:216;mso-char-wrap:
1;mso-kinsoku-overflow:1">
　</div>
										</div>
												<p>　</div>
								</div>
										<p>　</div>
						</div>
							</div>
					<div style="mso-line-spacing:&quot;90 50 0&quot;;mso-margin-left-alt:216;mso-char-wrap:
1;mso-kinsoku-overflow:1">　</div></div>
				<p>　</div>
		</div>
				<div style="mso-line-spacing:&quot;90 50 0&quot;;mso-margin-left-alt:216;mso-char-wrap:
1;mso-kinsoku-overflow:1">　</div>
	</div>
			　</td>
  </tr>
							
	   </table>